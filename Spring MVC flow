Client로 부터 Request를 담은 HTTP 요청이 오면 DispatcherServlet이 해당 요청을 핸들링,컨트롤링한다.


- DispatcherServlet에 관한 설명

JavaBeans 구성 메커니즘을 기반으로 한다.

{@link HandlerMapping}을 사용해서 핸들러 객체에 대한 요청 라우팅(통신 데이터를 보낼 때 최적의 경로를 선택하는 과정) 제어가 가능하다.
기본값은 {@link org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping}과 {@link org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping}
HandlerMapping 객체는 HandlerMapping 인터페이스를 구현하고 있는 경우 기본 HandlerMapping을 재정의하여 서블릿의 어플리케이션 컨텍스트에서 빈으로 정의할 수 있다.
HandlerMappings에는 모든 빈 이름을 지정할 수 있다.

모든 {@link HandlerAdapter}를 사용할 수 있다. 이를 통해 모든 핸들러 인터페이스를 사용할 수 있다.
기본값은 {@link org.springframework.web.HttpRequestHandlerAdapter}, {@link org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter}, 스프링의 
{@link org.springframework.web.HttpRequestHandler} 그리고 {@link org.springframework.web.servlet.mvc.Controller} 각각의 인터페이스다.
기본 {@link org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter}도 잘 등록될 것이다.
HandlerAdapter 객체는 재정의한 default HandlerAdapter들과 application context에 빈으로서 추가될 것이다.
HandlerMappings와 마찬가지로, HandlerAdapter들에는 어떤 Bean Name이건 지정할 수 있다.

