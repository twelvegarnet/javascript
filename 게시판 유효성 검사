1. 글 작성시 <textarea>에 작성된 글의 개행이 상세보기에서 적용되지 않음
  기존의 입력 값을 Javascript에서 처리해보려고 했지만 되지 않았다.
  Controller단에서 받아온 textarea의 값을 변수에 저장해서 replace(old String, new String)를 이용하여 치환한다.
  이 방법을 이용해서 "\n" 으로 표현된 개행문자를 "<br>"로 치환한다.
  이와 같이 해주면 DB에 <br>이 삽입되며, 상세보기에서 출력 시 개행이 적용되어 나타난다.
  ex) String boardContent = board.getBoardContent().replace("\r\n", "<br>");
    board.setBoardContent(boardContent);
    
  2021.07.03 변경사항
  위와 같이 할 경우 모든 태그에 대한 치환을 정해주어야 하는데 그 수가 많다.
  그러므로 태그도 텍스트 자체로 받아들이는 <pre>태그를 기존의 삽입내용에 추가하여 DB에 저장한다.
  
  제목과 내용 모두 <pre>태그를 추가하여 DB에 저장하지만, 
  제목은 <input type="text" />이므로 한 줄 내용만을 입력받기에 view시 문두와 문미에 <pre>태그를 지워서 태그를 텍스트 그대로 출력하고
  내용은 <textarea> 태그이므로 기존에 적용된 개행 등의 기능이 그대로 적용되어야 하기에, <pre>태그가 적용된 상태로 가져온다.
  
  2021.07.05 추가 사항
  <pre> 태그는 <br>이나 <p>와 같이 HTML소스를 출력하지만, 이 태그들도 텍스트로 표현하고 싶다면
  <xmp> 태그를 사용하면 모든 HTML 소스를 텍스트 형태로 출력한다.
  
  ==============================================================================================
  - Controller //제목 앞뒤에 붙인 <pre> 태그를 substring으로 잘라낸다.
  String boardTitle = viewBoard.getBoardTitle().substring(5, viewBoard.getBoardTitle().length()-6);
  viewBoard.setBoardTitle(boardTitle);
  model.addAttribute("board", viewBoard);
  ==============================================================================================
  - jsp //제목과 내용의 출력형태가 다르다.
  제목 : <c:out value="${board.boardTitle}" escapeXml="true" />
  내용 : ${board.boardContent }
  ==============================================================================================
    
2. 비밀번호 체크 등을 할 때 숫자로 입력하면 체크가 제대로 되지만, 문자로 입력하면 체크가 안되는 상황
  ==============================================================================================
  function deleteBoard(){
    const chk = confirm("게시글을 삭제하시겠습니까?");
      
    if(chk){
    	const pwchk = prompt("비밀번호를 입력해주세요.");
	if(pwchk === ${board.boardPw}){
	  location.href = "/board/delete?boardNo="+${board.boardNo};
	} else {
	  alert("정확한 비밀번호를 입력해주세요.");
	}
	
	} else {
	  return;
    	}
    }
  ==============================================================================================
  위와 같은 경우 숫자는 비교가 되지만, 문자열은 문자열로 인식하지 못해 비교를 할 수 없다.
  따라서, if(pwchk === ${board.boardPw}) 이 부분을 if(pwchk === '${board.boardPw}') 로 바꾸어주면 정상 작동한다.
  


<%-- 알아봐야하는 항목 -->
const nickCheck = /[^가-힣a-zA-Z0-9]{1,}/; 와 const nickCheck = /[^가-힣a-zA-Z0-9]{1,}$/; 의 차이

위는 닉네임을 입력한 후 blur될 때 아이디의 형식을 체크하기 위한 기준이다.
첫번째를 .test()의 기준으로 이용하면 "가나다"를 입력 후 true 반환한 후 "가나다#"를 입력 하면 false를 반환한다.
하지만 여기서 문제되는 부분이 "가나다#"에서 범위내의 문자를 추가한다면 true를 반환한다.
ex) "가나다#ab" --> true
이 부분을 두번째 기준으로 수정하여 정상작동을 만들었지만 정규식에 대한 정확한 이해가 필요하다.

